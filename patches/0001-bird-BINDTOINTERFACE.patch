--- sysdep/unix/io.c.orig	2024-07-26 14:40:22.481483576 +0200
+++ sysdep/unix/io.c	2024-07-26 14:58:24.904408793 +0200
@@ -977,9 +977,16 @@
        This is Linux-specific, but so is SO_BINDTODEVICE. */
 #ifdef SO_BINDTODEVICE
     struct ifreq ifr = {};
-    strcpy(ifr.ifr_name, s->vrf->name);
-    if (setsockopt(s->fd, SOL_SOCKET, SO_BINDTODEVICE, &ifr, sizeof(ifr)) < 0)
-      ERR("SO_BINDTODEVICE");
+    /* Re-binding a socket to another (or the same interface) is a high-privileged
+       action. Avoid doing that if the socket is already correctly bound. */
+    socklen_t len = sizeof(ifr.ifr_name);
+    if (getsockopt(s->fd, SOL_SOCKET, SO_BINDTODEVICE, ifr.ifr_name, &len) < 0)
+      ERR("GET_SO_BINDTODEVICE");
+    if (strcmp(ifr.ifr_name, s->vrf->name) != 0) {
+      strcpy(ifr.ifr_name, s->vrf->name);
+      if (setsockopt(s->fd, SOL_SOCKET, SO_BINDTODEVICE, &ifr, sizeof(ifr)) < 0)
+        ERR("SO_BINDTODEVICE");
+    }
 #endif
   }
 
